var _user$project$Main$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$none;
};
var _user$project$Main$commandForm = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$input,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$placeholder('Pawn to a7'),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$name('command'),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$type_('text'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onInput(_user$project$Msg$CommandChange),
								_1: {ctor: '[]'}
							}
						}
					}
				},
				{ctor: '[]'}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$button,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Events$onClick(_user$project$Msg$SubmitCommand),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('Submit'),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$id('game'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _user$project$GameRender$renderGame(model),
			_1: {
				ctor: '::',
				_0: _user$project$Main$commandForm(model),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Main$init = {
	ctor: '_Tuple2',
	_0: {board: _user$project$Model$newBoard, command: ''},
	_1: _elm_lang$core$Platform_Cmd$none
};
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'Reset':
				return _user$project$Main$init;
			case 'CommandChange':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{command: _p0._0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			default:
				var _p1 = A2(
					_elm_lang$core$Debug$log,
					_elm_lang$core$Basics$toString(
						_user$project$Command$findPosition(model.command)),
					2);
				var _p2 = A2(
					_elm_lang$core$Debug$log,
					_elm_lang$core$Basics$toString(
						_user$project$Command$findRank(model.command)),
					1);
				return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
		}
	});
var _user$project$Main$main = _elm_lang$html$Html$program(
	{init: _user$project$Main$init, view: _user$project$Main$view, update: _user$project$Main$update, subscriptions: _user$project$Main$subscriptions})();
